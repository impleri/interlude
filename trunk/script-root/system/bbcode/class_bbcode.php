<?php/* file: system/bbcode** begin: 01/01/2006** $Revision$** $Date$**** description: bbcode workhorse**/if (!defined('PLAY_MUSIC')){        die('Start from the beginning.');}/* * BBCode class * ------------ * This class is a simple workhorse: it processes all the hooks and plugins * associated with encoding and decoding a given text. * * Functions: run, encode, decode */class bbcode{    private var $plugins;    private var $hooks;    /*     * function __construct     * --------------------     * Gets the proper hooks and plugins     */    public function __construct()    {        $this->plugins = core::get_plugins('bbcode');        $this->hooks = core::get_hooks('bbcode-*');        core::run_hooks($this->hooks['bbcode-start']);    }    /*     * function run     * ------------     * Here's the primary function. It takes $text, runs it through a hook,     * then iterates through each plugin, followed by another hook. It does a     * simple check before running $text through the full plugin so that we can     * save time where a plug is not needed.  Outputs the transformed $text.     */    private function run($text, $function='encode')    {        $check = 'check_' . $function;        core::run_hooks($this->hooks['bbcode-pre-' . $function]);        foreach ($this->plugins as $plug => dummy)        {            if ($plug->$check($text))            {                $plug->$function(&$text);            }        }        core::run_hooks($this->hooks['bbcode-post-' . $function]);        return $text;    }    /*     * function encode     * ---------------     * frontend to run() for encoding text for DB insertion.     */    public function encode($text)    {        return $this->run($text, 'encode');    }    /*     * function decode     * ---------------     * frontend to run() for decoding text for display/output.     */    public function decode($text)    {        return $this->run($text, 'decode');    }}/* * BBCode Object abstract parent * ----------------------------- * This ensures that bbcode plugins have the functions required by the bbcode * class.  Use like any other parent class */abstract class bbcode_object{    private var $_name = '';    abstract public function check_encode()    abstract public function encode()    abstract public function check_decode()    abstract public function decode()    public function __toString()    {        return $this->_name;    }}?>